//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BackEnd.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EasyBudgetContext : DbContext
    {
        public EasyBudgetContext()
            : base("name=EasyBudgetContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<COMPROBANTE> COMPROBANTES { get; set; }
        public virtual DbSet<LOGIN> LOGINS { get; set; }
        public virtual DbSet<PERSONA> PERSONAS { get; set; }
        public virtual DbSet<ROLE> ROLES { get; set; }
        public virtual DbSet<TIPOOBJETIVO> TIPOOBJETIVOes { get; set; }
        public virtual DbSet<TIPOTRANSACCION> TIPOTRANSACCIONs { get; set; }
        public virtual DbSet<COMERCIO> COMERCIOS { get; set; }
        public virtual DbSet<PRESUPUESTO> PRESUPUESTOes { get; set; }
        public virtual DbSet<OBJETIVO> OBJETIVOes { get; set; }
        public virtual DbSet<TRANSACCIONE> TRANSACCIONES { get; set; }
    
        public virtual ObjectResult<string> sp_getLoginRole(string roleName)
        {
            var roleNameParameter = roleName != null ?
                new ObjectParameter("roleName", roleName) :
                new ObjectParameter("roleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_getLoginRole", roleNameParameter);
        }
    
        public virtual ObjectResult<string> sp_getRolesForLogin(string loginName)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_getRolesForLogin", loginNameParameter);
        }
    
        public virtual int sp_isLoginInRole(string loginName, string roleName)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("roleName", roleName) :
                new ObjectParameter("roleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_isLoginInRole", loginNameParameter, roleNameParameter);
        }
    }
}
